@model IEnumerable<AirlineReservation.Models.FlightInstance>
@{
    ViewBag.Title = "Instancias de Vuelo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Instancias de Vuelo</h2>
        @if (ViewBag.Message != null)
        {
            <input type="hidden" id="error" value="@ViewBag.Message">
        }
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title tooltip-demo">
                    &nbsp;
                    <a class="btn btn-default btn-options btn-sm btn-outline" data-toggle="tooltip" data-placement="top" title="Refrescar" href="@Url.Action("Index", "FlightInstance", new { pagina = 1 })"><i class="fa fa-refresh"></i> Refrescar</a>
                    &nbsp;&nbsp;
                    <a class="btn btn-default btn-options btn-outline" data-toggle="tooltip" data-placement="top" title="Crear" href="@Url.Action("Create", "FlightInstance")"><i class="fa fa-plus"></i> Crear</a>
                    <div class="ibox-tools">
                    </div>
                </div>
                <div class="ibox-content table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="flightInstances">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.ID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.StateID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Cost)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.FlightNumberID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.EstimatedDeparture)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.EstimatedArrival)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.RealDeparture)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.RealArrival)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.AircraftID)
                                </th>
                                <th>
                                    Acciones
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null)
                            {
                                foreach (var item in Model)
                                {
                                    <tr id="@item.ID">
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ID)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.State)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Cost)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.FlightNumberID)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.EstimatedDepartureString)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.EstimatedArrivalString)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.RealDepartureString)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.RealArrivalString)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.AircraftID)
                                        </td>
                                        <td>
                                            <form method="post" action="/FlightInstance/PassengerCount/@item.ID">
                                                @Html.AntiForgeryToken()
                                                <input type="submit" value="Total Pasajeros" class="btn btn-outline btn-primary btn-xs" />
                                            </form>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/toastrStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/toastr")

    <script type="text/javascript">

        $(document).ready(function () {
            var mensaje = document.getElementById("error");
            if (mensaje != null) {
                toastr.info(mensaje.value);
            }
        });

        $(document).ready(function () {

            var i = -1;
            var toastCount = 0;
            var $toastlast;
            var getMessage = function () {
                var msg = 'Hi, welcome to Inspinia. This is example of Toastr notification box.';
                return msg;
            };

            $('#showsimple').click(function () {
                // Display a success toast, with a title
                toastr.success('Without any options', 'Simple notification!')
            });
            $('#showtoast').click(function () {
                var shortCutFunction = $("#toastTypeGroup input:radio:checked").val();
                var msg = $('#message').val();
                var title = $('#title').val() || '';
                var $showDuration = $('#showDuration');
                var $hideDuration = $('#hideDuration');
                var $timeOut = $('#timeOut');
                var $extendedTimeOut = $('#extendedTimeOut');
                var $showEasing = $('#showEasing');
                var $hideEasing = $('#hideEasing');
                var $showMethod = $('#showMethod');
                var $hideMethod = $('#hideMethod');
                var toastIndex = toastCount++;
                toastr.options = {
                    closeButton: $('#closeButton').prop('checked'),
                    debug: $('#debugInfo').prop('checked'),
                    progressBar: $('#progressBar').prop('checked'),
                    positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',
                    onclick: null
                };
                if ($('#addBehaviorOnToastClick').prop('checked')) {
                    toastr.options.onclick = function () {
                        alert('You can perform some custom action after a toast goes away');
                    };
                }
                if ($showDuration.val().length) {
                    toastr.options.showDuration = $showDuration.val();
                }
                if ($hideDuration.val().length) {
                    toastr.options.hideDuration = $hideDuration.val();
                }
                if ($timeOut.val().length) {
                    toastr.options.timeOut = $timeOut.val();
                }
                if ($extendedTimeOut.val().length) {
                    toastr.options.extendedTimeOut = $extendedTimeOut.val();
                }
                if ($showEasing.val().length) {
                    toastr.options.showEasing = $showEasing.val();
                }
                if ($hideEasing.val().length) {
                    toastr.options.hideEasing = $hideEasing.val();
                }
                if ($showMethod.val().length) {
                    toastr.options.showMethod = $showMethod.val();
                }
                if ($hideMethod.val().length) {
                    toastr.options.hideMethod = $hideMethod.val();
                }
                if (!msg) {
                    msg = getMessage();
                }
                $("#toastrOptions").text("Command: toastr["
                        + shortCutFunction
                        + "](\""
                        + msg
                        + (title ? "\", \"" + title : '')
                        + "\")\n\ntoastr.options = "
                        + JSON.stringify(toastr.options, null, 2)
                );
                var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists
                $toastlast = $toast;
                if ($toast.find('#okBtn').length) {
                    $toast.delegate('#okBtn', 'click', function () {
                        alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');
                        $toast.remove();
                    });
                }
                if ($toast.find('#surpriseBtn').length) {
                    $toast.delegate('#surpriseBtn', 'click', function () {
                        alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');
                    });
                }
            });
            function getLastToast() {
                return $toastlast;
            }
            $('#clearlasttoast').click(function () {
                toastr.clear(getLastToast());
            });
            $('#cleartoasts').click(function () {
                toastr.clear();
            });

        });
    </script>
}